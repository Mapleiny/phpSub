// Generated by CoffeeScript 1.6.3
var ImageCut;

ImageCut = (function() {
  var createCanvas;

  createCanvas = function(width, height) {
    var canvas;
    canvas = document.createElement('canvas');
    canvas.width = width;
    canvas.height = height;
    return canvas;
  };

  function ImageCut(imgObj) {
    this.imgObj = imgObj;
  }

  ImageCut.prototype.cutParams = {
    'sx': 0,
    'sy': 0,
    'sWidth': null,
    'sHeight': null,
    'width': null,
    'height': null,
    'maxWidth': null,
    'maxHeight': null
  };

  ImageCut.prototype.setCutParams = function(key, value) {
    var params;
    if (value === void 0) {
      params = key;
      for (key in this.cutParams) {
        if (key in params) {
          this.cutParams[key] = params[key];
        }
      }
    } else {
      if (key in this.cutParams) {
        this.cutParams[key] = value;
      }
    }
  };

  ImageCut.prototype.create = function(callback) {
    var canvas, ctx, cutParams, height, img, imgObj, maxHeight, maxWidth, sHeight, sWidth, scale, sx, sy, width;
    imgObj = this.imgObj;
    cutParams = this.cutParams;
    sx = cutParams.sx;
    sy = cutParams.sy;
    sWidth = cutParams.sWidth || imgObj.width;
    sHeight = cutParams.sHeight || imgObj.height;
    width = cutParams.width || sWidth;
    height = cutParams.height || sHeight;
    maxWidth = cutParams.maxWidth;
    maxHeight = cutParams.maxHeight;
    scale = width / height;
    if (maxWidth && maxHeight) {
      if (maxWidth / maxHeight < scale) {
        height = maxHeight;
        width = scale * height;
      } else {
        width = maxWidth;
        height = width / scale;
      }
    } else if (maxWidth && width > maxWidth) {
      width = maxWidth;
      height = width / scale;
    } else if (maxHeight && height > maxHeight) {
      height = maxHeight;
      width = scale * height;
    }
    width = Math.floor(width);
    height = Math.floor(height);
    canvas = createCanvas(width, height);
    ctx = canvas.getContext('2d');
    ctx.drawImage(imgObj, sx, sy, sWidth, sHeight, 0, 0, width, height);
    img = new Image();
    img.src = canvas.toDataURL();
    img.onload = function() {
      return callback(img);
    };
  };

  return ImageCut;

})();
