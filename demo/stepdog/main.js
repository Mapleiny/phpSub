// Generated by CoffeeScript 1.8.0
(function(DOC) {
  var html, screenWidth;
  screenWidth = DOC.body.clientWidth;
  html = DOC.getElementsByTagName('html')[0];
  return html.style.fontSize = 10 * screenWidth / 320 + 'px';
})(document);

(function(WIN, DOC) {
  var $block1, $block2, $container, $currentBlock, $nextBlock, animateTo, containerHeight, createBlock, createRow, createSafePos, currentBlock, currentStep, eachHeight, eventHandle, gameInit, gameOver, gameRest, gameStatus, isGameOver, next, resetPos, score, setBeginPos, setStepPos;
  $container = $('#game-capture');
  $block1 = $container.find('.block1');
  $block2 = $container.find('.block2');
  containerHeight = $container.height();
  eachHeight = containerHeight / 3;
  currentBlock = 1;
  $currentBlock = $block1;
  $nextBlock = $block2;
  currentStep = 2;
  isGameOver = false;
  score = 0;
  createRow = function(rowIndex, blockNo) {
    var colIndex, contentHtml, safe, safePos, _i;
    contentHtml = [];
    contentHtml.push('<div class="row">');
    safePos = createSafePos();
    for (colIndex = _i = 0; _i < 4; colIndex = ++_i) {
      safe = '';
      if (colIndex === safePos) {
        safe = ' safe';
      }
      contentHtml.push("<div class=\"col" + safe + "\" row=\"" + rowIndex + "\" col=\"" + colIndex + "\" block=\"" + blockNo + "\"></div>");
    }
    contentHtml.push('</div>');
    return contentHtml.join('');
  };
  createSafePos = function() {
    return Math.floor(Math.random() * 4);
  };
  gameInit = function() {
    var i, _i;
    for (i = _i = 0; _i < 3; i = ++_i) {
      $block1.append(createRow(i, 1));
      $block2.append(createRow(i, 2));
    }
    setBeginPos($block2);
    eventHandle();
  };
  gameRest = function() {
    var i, _i;
    $block1.empty();
    $block2.empty();
    currentBlock = 1;
    $currentBlock = $block1;
    $nextBlock = $block2;
    currentStep = 2;
    isGameOver = false;
    score = 0;
    for (i = _i = 0; _i < 3; i = ++_i) {
      $block1.append(createRow(i, 1));
      $block2.append(createRow(i, 2));
    }
    resetPos($block1);
    setBeginPos($block2);
  };
  gameOver = function($elem) {
    isGameOver = true;
    alert('gameOver!得分：' + score);
    return gameRest();
  };
  gameStatus = function($elem) {
    var block, isSafe, row;
    block = +$elem.attr('block');
    row = +$elem.attr('row');
    isSafe = $elem.hasClass('safe');
    if (isGameOver) {
      return;
    }
    if (block === currentBlock && row === currentStep) {
      if (isSafe) {
        next();
      } else {
        gameOver($elem);
      }
    }
  };
  next = function() {
    var blockNo, poxY;
    score++;
    poxY = setStepPos(currentStep);
    animateTo($currentBlock, poxY.currentBlock);
    animateTo($nextBlock, poxY.nextBlock);
    if (currentStep === 0) {
      blockNo = currentBlock;
      if (currentBlock === 1) {
        currentBlock = 2;
        $currentBlock = $block2;
        $nextBlock = $block1;
      } else {
        currentBlock = 1;
        $currentBlock = $block1;
        $nextBlock = $block2;
      }
      currentStep = 3;
      $nextBlock.on('webkitTransitionEnd', function() {
        setBeginPos($nextBlock);
        createBlock($nextBlock, blockNo);
        return $nextBlock.off('webkitTransitionEnd');
      });
    }
    return --currentStep;
  };
  createBlock = function($elem, blockNo) {
    var i, _i;
    $elem.empty();
    for (i = _i = 0; _i < 3; i = ++_i) {
      $elem.append(createRow(i, blockNo));
    }
  };
  animateTo = function($elem, posY) {
    return $elem.addClass('animate').css('-webkit-transform', 'matrix(1, 0, 0, 1, 0,' + posY + ')');
  };
  resetPos = function($elem) {
    return $elem.removeClass('animate').css('-webkit-transform', 'matrix(1, 0, 0, 1, 0,0)');
  };
  setBeginPos = function($elem) {
    return $elem.removeClass('animate').css('-webkit-transform', 'matrix(1, 0, 0, 1, 0,' + -containerHeight + ')');
  };
  setStepPos = function(step) {
    step = 3 - step;
    return {
      'currentBlock': step * eachHeight,
      'nextBlock': step * eachHeight - containerHeight
    };
  };
  eventHandle = function() {
    $('html').on('touchstart touchmove touchend', function(e) {
      return event.preventDefault();
    });
    return $container.on('touchstart', '.col', function() {
      return gameStatus($(this));
    });
  };
  return gameInit();
})(window, document);
